service: improve-v3
custom: 
  firehoseS3ObjectCreatedSns: arn:aws:sns:us-west-2:117097735164:improve-v3-resources-${opt:stage, self:provider.stage}-FirehoseS3ObjectCreated
provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-2
  timeout: 6
  memorySize: 192
  environment:  
    SERVICE: ${self:service}
    STAGE: ${opt:stage, self:provider.stage}
    TRAINING_IMAGE: 117097735164.dkr.ecr.us-east-2.amazonaws.com/decision_service
    TRAINING_INSTANCE_TYPE: ml.m5.large
    TRAINING_VOLUME_SIZE_IN_GB: 50
    TRAINING_MAX_RUNTIME_IN_SECONDS: 86400 # 1 day
    HOSTING_IMAGE: 117097735164.dkr.ecr.us-east-2.amazonaws.com/decision_service
    HOSTING_INSTANCE_TYPE: ml.t2.medium
    HOSTING_INITIAL_INSTANCE_COUNT: 1 # should be large enough that model updates can immediately serve a production load without waiting for auto-scaling
    TRAINING_ROLE_ARN: arn:aws:iam::117097735164:role/service-role/AmazonSageMaker-ExecutionRole-20181021T151698
    FIREHOSE_DELIVERY_STREAM_NAME: ${self:service}-resources-${opt:stage, self:provider.stage}-firehose
    RECORDS_BUCKET: ${self:service}-resources-${opt:stage, self:provider.stage}-records
    MODELS_BUCKET: ${self:service}-resources-${opt:stage, self:provider.stage}-models
  iamRoleStatements: 
    - Effect: Allow
      Action:
        - "firehose:*"
      Resource: "arn:aws:firehose:*:*:deliverystream/${self:provider.environment.FIREHOSE_DELIVERY_STREAM_NAME}"
    - Effect: Allow
      Action:
        - "s3:*"
      Resource: 'arn:aws:s3:::${self:service}-resources-${opt:stage, self:provider.stage}*'
    - Effect: Allow
      Action:
        - "sagemaker:*"
      Resource: '*'
    - Effect: Allow
      Action:
        - "iam:PassRole"
      Resource: "arn:aws:iam::*:role/*" # Resource: "arn:aws:iam::ACCOUNT_NUMBER:role/service-role/SAGEMAKER_SERVICE_ROLE"


functions:
  choose:
    handler: api.choose
    events:
      - http:
          path: choose
          method: post
          cors: true
          private: true
  using:
    handler: api.using
    events:
      - http:
          path: using
          method: post
          cors: true
          private: true
  rewards:
    handler: api.rewards
    events:
      - http:
          path: rewards
          method: post
          cors: true
          private: true
  unpackFirehose:
    handler: unpack_firehose.unpackFirehose
    timeout: 300
    events:
      - sns: ${self:custom.firehoseS3ObjectCreatedSns}
  dispatchTrainingJobs:
    handler: train_deploy.dispatchTrainingJobs
    timeout: 300
    events:
      - schedule: rate(5 minutes)
  deployUpdatedModels:
    handler: train_deploy.deployUpdatedModels
    timeout: 300
    events:
      - schedule: rate(1 minute)
